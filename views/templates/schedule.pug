link(rel="stylesheet", href=baseurl + "css/templates/schedule.css")
div.text-center#container-status
    span.text-success.status-message#success
    span.text-danger.status-message#error
div
    input#row-type(type="hidden", value=scheduleRowType)
    div.side-bar-toggle(data-toggle="false")
        span &gt;
    div.side-bar
        ul.side-bar-links
            div.exit
                span x
            if scheduleRowType == "person"
                li.side-bar-link Choose Day
                    div.days.link-content
                        each day, index in daysOfWeek
                            - var isSelected = index == scheduleFilters.day;
                            span.schedule-filter-link.schedule-filter-cell(data-selected=isSelected, data-param="day", data-value=index) #{day.toUpperCase()}
                li.side-bar-link Sort By
                    div.sort-types.link-content
                        select.schedule-filter-link(data-param="sort")
                            - var sortables = ["name", "daily hours", "weekly hours"];
                            each sortable in sortables
                                - var isSelected = sortable == scheduleFilters.sort;
                                option(value=sortable, selected=isSelected) #{sortable.toUpperCase()}
                li.side-bar-link Filter By
                    div.filter-options.link-content
                        //- TODO: Check if [for=''] is needed here, since select is nested in label
                        label(for="position-names") Position
                            select.border-rounded.input-filter#position-names(data-filter="position-names", multiple, style="width: 100%;")
                                each position in schedulePositionNames
                                    option(value=position) #{position}
                        label(for="position-categories") Category
                            select.border-rounded.input-filter(data-filter="position-categories", multiple, style="width: 100%;")
                                each category in schedulePositionCategories
                                    option(value=category) #{category}
                li.side-bar-link Term
                    div.terms.link-content
                        select.schedule-filter-link#schedule-term(data-param="term")
                            each term in scheduleTerms
                                - var isSelected = term.id == scheduleFilters.term;
                                option(value=term.id, selected=isSelected) #{term.name.toUpperCase()}
    div.schedule-box
        div.selected-term.headers
            p
                strong Selected Term:&nbsp;&nbsp;
                each term in scheduleTerms
                    if term.id == scheduleFilters.term
                        | #{term.name.toUpperCase()}
        div.selected-day.headers
            p
                strong Selected Day:&nbsp;&nbsp;
                | #{daysOfWeek[scheduleFilters.day]}
        div.selected-sort-by.headers
            p
                strong Sorting By:&nbsp;&nbsp;
                | #{scheduleFilters.sort.toUpperCase()}
        div.selected-filter-by.headers
            p
        each row, rowID in scheduleRows
            div.person-box.schedule-row-filterable.col-xs-12.col-md-4&attributes(row.filterables)
                div.person-box-person(data-selected-day=scheduleFilters.day, data-selected-term=scheduleFilters.term, data-userid=row.userid, data-rowid=rowID)
                    - if (scheduleRowType == "person")
                        p #{row.label}
                    - else
                        div.schedule-label #{row.label}
                div.person-box-content
                    div.total-hours-column
                        span Total Hours:&nbsp;&nbsp;&nbsp;&nbsp;
                        span.day-week-hours #{daysOfWeek[scheduleFilters.day]}
                        span.day-week-hours #{row.dayTotal ? row.dayTotal : "0"}
                        span.day-week-hours /
                        span.day-week-hours #{row.weekTotal ? row.weekTotal : "0"}
                        span.day-week-hours Week
                    div.col-xs-3.legend-column-sections
                        a.btn.btn-default.availability-btn(href=baseurl + "availability?userid=" + row.userid + "&term=" + scheduleFilters.term) Availability
                    div.col-xs-2.daily-hours-column
                        div
                            span &nbsp;
                        div.schedule-cell.schedule-header-cell
                        - for (var i = 0; i < scheduleHours.length - 1; i++)
                            div.schedule-cell.schedule-header-cell #{scheduleHours[i]}
                    div.col-xs-7.schedule
                        div.quarters
                            span :15&nbsp;&nbsp;&nbsp;
                            span :30
                            span &nbsp;&nbsp;&nbsp;:45
                        div.schedule-box
                            div.schedule-cell-quarter.clone(data-row="", data-cell="", data-quarter="", data-column="", data-previous-color="none", data-location="", data-available="", data-time="")
